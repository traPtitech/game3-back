// Package models provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.0.0 DO NOT EDIT.
package models

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Defines values for UserRole.
const (
	UserRoleAdmin UserRole = "admin"
	UserRoleUser  UserRole = "user"
)

// Event defines model for Event.
type Event struct {
	// GameSubmissionPeriodEnd ゲーム展示の募集終了期間
	GameSubmissionPeriodEnd time.Time `json:"gameSubmissionPeriodEnd"`

	// GameSubmissionPeriodStart ゲーム展示の募集開始期間
	GameSubmissionPeriodStart time.Time `json:"gameSubmissionPeriodStart"`

	// Id イベントID (slugとしても使用)
	Id openapi_types.UUID `json:"id"`

	// Title イベントのタイトル (例: 第18回)
	Title string `json:"title"`
}

// Game defines model for Game.
type Game struct {
	// CreatorName ブース展示者名
	CreatorName string `json:"creatorName"`

	// Description ゲームの説明
	Description *string `json:"description,omitempty"`

	// DevelopmentEnvironment ゲームの開発環境
	DevelopmentEnvironment *string `json:"developmentEnvironment,omitempty"`

	// DiscordUserId DiscordのユーザーID
	DiscordUserId *string `json:"discordUserId,omitempty"`

	// EventId イベントID
	EventId *openapi_types.UUID `json:"eventId,omitempty"`

	// Genre 展示するゲームのジャンル
	Genre *string `json:"genre,omitempty"`

	// Id ゲームID
	Id openapi_types.UUID `json:"id"`

	// Organization 所属団体
	Organization *string `json:"organization,omitempty"`

	// Term 用語
	Term *string `json:"term,omitempty"`

	// Title 展示するゲームタイトル
	Title string `json:"title"`

	// TwitterId Twitter ID
	TwitterId *string `json:"twitterId,omitempty"`

	// WebsiteUrl Webサイト等のURL
	WebsiteUrl *string `json:"websiteUrl,omitempty"`
}

// GetEventCSVResponse defines model for GetEventCSVResponse.
type GetEventCSVResponse = string

// ImageResponse defines model for ImageResponse.
type ImageResponse = openapi_types.File

// PatchEventRequest defines model for PatchEventRequest.
type PatchEventRequest = PostEventRequest

// PatchGameRequest defines model for PatchGameRequest.
type PatchGameRequest = PostGameRequest

// PostContactsRequest defines model for PostContactsRequest.
type PostContactsRequest struct {
	// Email メールアドレス
	Email string `json:"email"`

	// Message お問い合わせ内容
	Message string `json:"message"`

	// Name 名前
	Name string `json:"name"`
}

// PostEventRequest defines model for PostEventRequest.
type PostEventRequest struct {
	// GameSubmissionPeriodEnd ゲーム展示の募集期間
	GameSubmissionPeriodEnd time.Time `json:"gameSubmissionPeriodEnd"`

	// GameSubmissionPeriodStart ゲーム展示の募集期間
	GameSubmissionPeriodStart time.Time `json:"gameSubmissionPeriodStart"`

	// Image パンフレット用画像
	Image *openapi_types.File `json:"image,omitempty"`

	// Slug slug (URL内で使用, unique)
	Slug string `json:"slug"`

	// Title 第18回
	Title string `json:"title"`
}

// PostGameRequest defines model for PostGameRequest.
type PostGameRequest struct {
	// CreatorName ブース展示者名
	CreatorName string `json:"creatorName"`

	// Description ゲームの説明
	Description *string `json:"description,omitempty"`

	// DevelopmentEnvironment ゲームの開発環境
	DevelopmentEnvironment *string `json:"developmentEnvironment,omitempty"`

	// Genre 展示するゲームのジャンル
	Genre *string `json:"genre,omitempty"`

	// Image ゲームの画像
	Image *openapi_types.File `json:"image,omitempty"`

	// Organization 所属団体
	Organization *string `json:"organization,omitempty"`

	// Title 展示するゲームタイトル
	Title string `json:"title"`

	// TwitterId Twitter ID
	TwitterId *string `json:"twitterId,omitempty"`

	// WebsiteUrl Webサイト等のURL
	WebsiteUrl *string `json:"websiteUrl,omitempty"`
}

// User defines model for User.
type User struct {
	ProfileImageUrl *string   `json:"profileImageUrl,omitempty"`
	Role            *UserRole `json:"role,omitempty"`
	UserId          *string   `json:"userId,omitempty"`
	Username        *string   `json:"username,omitempty"`
}

// UserRole defines model for User.Role.
type UserRole string

// EventIdInPath イベントID
type EventIdInPath = string

// GameIdInPath ゲームID
type GameIdInPath = string

// UserIdInPath ユーザーID
type UserIdInPath = string

// PostContactsJSONRequestBody defines body for PostContacts for application/json ContentType.
type PostContactsJSONRequestBody = PostContactsRequest

// PostEventMultipartRequestBody defines body for PostEvent for multipart/form-data ContentType.
type PostEventMultipartRequestBody = PostEventRequest

// PatchEventJSONRequestBody defines body for PatchEvent for application/json ContentType.
type PatchEventJSONRequestBody = PatchEventRequest

// PostGameMultipartRequestBody defines body for PostGame for multipart/form-data ContentType.
type PostGameMultipartRequestBody = PostGameRequest

// PatchGameMultipartRequestBody defines body for PatchGame for multipart/form-data ContentType.
type PatchGameMultipartRequestBody = PatchGameRequest
